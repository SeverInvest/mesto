(()=>{"use strict";function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function t(e){var r,n,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=function(e){"Escape"===e.key&&o.close()},(r="_handleEscClose")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._popup=document.querySelector(e)}var r,n;return r=t,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_visible")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_visible")}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_visible")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function o(){return o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=i(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},o.apply(this,arguments)}function i(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function a(e,t){if(t&&("object"===r(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(f,e);var t,r,i,s,l=(i=f,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(i);if(s){var r=u(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return a(this,e)});function f(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),(t=l.call(this,e))._popupPicture=document.querySelector(".popup__photo"),t._popupText=document.querySelector(".popup__photo-description"),t}return t=f,(r=[{key:"open",value:function(e){var t=e.name,r=e.link;o(u(f.prototype),"open",this).call(this),this._popupPicture.src=r,this._popupPicture.alt=t,this._popupText.textContent=t}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),f}(t);const l={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"error_visible",templateCardSelector:"#card",spanErrorSelector:".error",popupProfileSelector:".popup_type_profile",popupBigPhotoSelector:".popup_type_photo",popupCardSelector:".popup_type_card",popupCloseSelector:".popup__close",popupConfirmSelector:".popup_type_confirm",popupUpdateAvatar:".popup_type_upd-avatar",profileSelector:".traveler",profileButtonCorrectSelector:".traveler__button-correct",profileButtonUpdAvatarSelector:".traveler__change-avatar",inputProfileName:".form__input_type_name",inputProfileAbout:".form__input_type_about",buttonAddCardSelector:".traveler__button-add",listCardsSelector:".cards__list",profaleNameSelector:".traveler__name",profaleAboutSelector:".traveler__about",profaleAvatarSelector:".traveler__avatar"};function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=d(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}function y(e,t){return y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},y(e,t)}function _(e,t){if(t&&("object"===f(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&y(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(n);if(o){var r=v(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return _(this,e)});function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,t))._handleSubmitClick=e,r._inputs={},r._inputList=Array.from(r._popup.querySelectorAll(l.inputSelector)),r._form=r._popup.querySelector(l.formSelector),r}return t=c,(r=[{key:"setEventListeners",value:function(){var e=this;h(v(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){e._handleSubmitClick(t,e._getInputValues())}))}},{key:"_getInputValues",value:function(){var e=this;return this._inputList.forEach((function(t){e._inputs[t.name]=t.value})),this._inputs}},{key:"close",value:function(){h(v(c.prototype),"close",this).call(this),this._form.reset()}}])&&p(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function E(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=k(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},S.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}function w(e,t){if(t&&("object"===m(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return w(this,e)});function c(e,t,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,r))._idCard=t,n._popupForm=n._popup.querySelector(l.formSelector),n._handleSubmitDeleteCard=e,n}return t=c,(r=[{key:"setEventListeners",value:function(){var e=this;S(C(c.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){e._handleSubmitDeleteCard(t,e._idCard)}))}}])&&E(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function j(){return j="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=I(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},j.apply(this,arguments)}function I(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=A(e)););return e}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function R(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function A(e){return A=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},A(e)}var T=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(c,e);var t,r,n,o,i=(n=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=A(n);if(o){var r=A(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return R(this,e)});function c(e,t){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(r=i.call(this,t))._handleSubmitClick=e,r._input=r._popup.querySelector(l.inputSelector),r._form=r._popup.querySelector(l.formSelector),r}return t=c,(r=[{key:"setEventListeners",value:function(){var e=this;j(A(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){e._handleSubmitClick(t,e._getInputValue())}))}},{key:"_getInputValue",value:function(){return this._input.value}},{key:"close",value:function(){j(A(c.prototype),"close",this).call(this),this._form.reset()}}])&&L(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var x=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(e){var t=this;e.cards.forEach((function(e){t._renderer(e)}))}}])&&U(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var D=function(){function e(t,r,n,o,i,c){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._likes=t.likes,this._idOwner=t.owner._id,this._idCard=t._id,this._name=t.name,this._link=t.link,this._myId=c,this._handleCardClick=n,this._handleToggleLike=o,this._handleOpenPopupWithConfirm=i,this._templateCardSelector=r,this._cardElement=this._getTemplate(),this._photo=this._cardElement.querySelector(".card__photo"),this._heart=this._cardElement.querySelector(".card__heart"),this._count_likes=this._cardElement.querySelector(".card__count-likes"),this._description=this._cardElement.querySelector(".card__description"),this._remove_button=this._cardElement.querySelector(".card__remove-button")}var t,r;return t=e,(r=[{key:"_countLikes",value:function(){return Object.keys(this._likes).length}},{key:"_isMyLike",value:function(){var e=this;return 0!==this._likes.length&&this._likes.some((function(t){return t._id===e._myId}))}},{key:"_setLike",value:function(){this._isMyLike()?this._heart.classList.add("card__heart_active"):this._heart.classList.remove("card__heart_active"),this._count_likes.textContent=this._countLikes(this._likes)}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateCardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_toggleLike",value:function(){var e=this;this._isMyLike(this._likes)?this._methodCardLike="DELETE":this._methodCardLike="PUT",this._handleToggleLike({idCard:this._idCard,methodCardLike:this._methodCardLike}).then((function(t){e._likes=t.likes,e._setLike()}))}},{key:"_removeCard",value:function(){this._handleOpenPopupWithConfirm(this)}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._photo.addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link})})),this._heart.addEventListener("click",(function(){return e._toggleLike()})),this._remove_button.addEventListener("click",(function(){return e._removeCard()}))}},{key:"createCard",value:function(){return this._description.textContent=this._name,this._photo.src=this._link,this._photo.alt=this._name,this._count_likes.textContent=this._countLikes(this._likes),this._setLike(this._likes),this._idOwner===this._myId&&this._remove_button.classList.add("card__remove-button_visible"),this._setEventListeners(),this._cardElement}}])&&B(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var N=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._params=t,this._formElement=r,this._errorList=r.querySelectorAll(t.spanErrorSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._params.inputSelector)),this._buttonElement=this._formElement.querySelector(this._params.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_addClassError",value:function(e){e.classList.remove(this._params.inputErrorClass)}},{key:"_removeClassError",value:function(e){e.classList.remove(this._params.inputErrorClass)}},{key:"_addValidationErrors",value:function(e,t){e.classList.add(this._params.errorClass),e.textContent=t}},{key:"_removeValidationErrors",value:function(e){e.textContent="",e.classList.remove(this._params.errorClass)}},{key:"_showInputError",value:function(e,t){var r=this._formElement.querySelector("#".concat(e.id,"-error"));this._addClassError(e),this._addValidationErrors(r,t)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));this._removeClassError(e),this._removeValidationErrors(t)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._buttonElement.disabled=this._hasInvalidInput(),this._hasInvalidInput()?this._buttonElement.classList.add(this._params.inactiveButtonClass):this._buttonElement.classList.remove(this._params.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"clearErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._removeClassError(t)})),this._toggleButtonState(),this._errorList.forEach((function(t){return e._removeValidationErrors(t)}))}}])&&V(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function M(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var J=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t),this._profileAbout=document.querySelector(r),this._profileAvatar=document.querySelector(n),this._myId=""}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{profileName:this._profileName.textContent,profileAbout:this._profileAbout.textContent,myId:this._myId}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about,n=e.myId,o=void 0===n?"":n;this._profileName.textContent=t,this._profileAbout.textContent=r,this._myId||(this._myId=o)}},{key:"renderAvatar",value:function(e){this._profileAvatar.src=e}},{key:"renderUserInfo",value:function(e){this.setUserInfo({name:e.name,about:e.about,myId:e.myId}),this.renderAvatar(e.avatar)}}])&&M(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function F(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}const G=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._connect=t}var t,r;return t=e,(r=[{key:"_onError",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"_isError",value:function(e){console.log(e)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._connect.baseUrl,"/cards"),{method:"GET",headers:this._connect.headers}).then(this._onError).catch(this._isError)}},{key:"getUser",value:function(){return fetch("".concat(this._connect.baseUrl,"/users/me"),{method:"GET",headers:this._connect.headers}).then(this._onError).catch(this._isError)}},{key:"renderUserAndCards",value:function(){return Promise.all([this.getUser(),this.getInitialCards()])}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._connect.baseUrl,"/users/me"),{method:"PATCH",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError).catch(this._isError)}},{key:"setCard",value:function(e){return fetch("".concat(this._connect.baseUrl,"/cards"),{method:"POST",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError).catch(this._isError)}},{key:"toggleLikeCard",value:function(e){var t=e.idCard,r=e.methodCardLike;return fetch("".concat(this._connect.baseUrl,"/cards/").concat(t,"/likes"),{method:r,headers:this._connect.headers}).then(this._onError).catch(this._isError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._connect.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._connect.headers}).then(this._onError).catch(this._isError)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._connect.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError).catch(this._isError)}}])&&F(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();var H=new J(l.profaleNameSelector,l.profaleAboutSelector,l.profaleAvatarSelector),W=document.querySelector(l.listCardsSelector),z="",K=new x({renderer:function(e){K.addItem(ee(e))}},l.listCardsSelector),Q=new G({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"79dea315-f51a-42c0-8f7a-17f645a07cb4","Content-Type":"application/json"}});Q.renderUserAndCards().then((function(e){H.renderUserInfo({name:e[0].name,about:e[0].about,myId:e[0]._id,avatar:e[0].avatar}),K.renderItems({cards:e[1]})}));var X=new T((function(e,t){return e.preventDefault(),he(fe,!0),Q.setAvatar({avatar:t}).then((function(e){var t=e.avatar;H.renderAvatar(t)})).then((function(){return X.close()})).finally((function(){return he(fe,!1)}))}),l.popupUpdateAvatar);X.setEventListeners();var Y=new s(l.popupBigPhotoSelector);function Z(e){var t=new O((function(r,n){return r.preventDefault(),Q.deleteCard(n).then((function(r){return t.close(),(r.message="Пост удалён")&&e.deleteCard(),r})).catch((function(){t.close()}))}),e._idCard,l.popupConfirmSelector);t.setEventListeners(),t.open()}function $(e){Y.open(e)}function ee(e){return new D(e,l.templateCardSelector,$,ne,Z,H.getUserInfo().myId).createCard()}Y.setEventListeners();var te=new b((function(e,t){e.preventDefault(),he(se,!0),Q.setCard(t).then((function(e){var t;t=ee(e),W.prepend(t)})).then((function(){return te.close()})).finally((function(){return he(se,!1)}))}),l.popupCardSelector);te.setEventListeners(),document.querySelector(l.buttonAddCardSelector).addEventListener("click",(function(){ye.clearErrors(),te.open()}));var re=new b((function(e,t){e.preventDefault(),he(oe,!0),Q.setUserInfo(t).then((function(e){H.setUserInfo(e)})).then((function(){return re.close()})).finally((function(){return he(oe,!1)}))}),l.popupProfileSelector);function ne(e){return Q.toggleLikeCard(e)}re.setEventListeners();var oe=document.querySelector(l.popupProfileSelector),ie=oe.querySelector(l.formSelector),ce=ie.querySelector(l.inputProfileName),ae=ie.querySelector(l.inputProfileAbout),ue=document.querySelector(l.profileSelector);ue.querySelector(l.profileButtonCorrectSelector).addEventListener("click",(function(){var e=H.getUserInfo();ce.value=e.profileName,ae.value=e.profileAbout,de.clearErrors(),re.open()})),ue.querySelector(l.profileButtonUpdAvatarSelector).addEventListener("click",(function(){X.open()}));var se=document.querySelector(l.popupCardSelector),le=se.querySelector(l.formSelector),fe=document.querySelector(l.popupUpdateAvatar),pe=fe.querySelector(l.formSelector);function he(e,t){var r=e.querySelector(l.submitButtonSelector);t?(z=r.textContent,r.textContent="Сохранение..."):(r.textContent=z,z="")}var de=new N(l,ie),ye=new N(l,le),_e=new N(l,pe);de.enableValidation(),ye.enableValidation(),_e.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,