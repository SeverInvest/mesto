(()=>{"use strict";function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var t=function(){function t(e){var r,n,o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),n=function(e){"Escape"===e.key&&o.close()},(r="_handleEscClose")in this?Object.defineProperty(this,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[r]=n,this._popup=document.querySelector(e)}var r,n;return r=t,(n=[{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("popup_visible")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("popup_visible")}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup_visible")||t.target.classList.contains("popup__close"))&&e.close()}))}}])&&e(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),t}();const r={formSelector:".form",inputSelector:".form__input",submitButtonSelector:".form__submit",inactiveButtonClass:"form__submit_disabled",inputErrorClass:"form__input_type_error",errorClass:"error_visible",templateCardSelector:"#card",spanErrorSelector:".error",popupProfileSelector:".popup_type_profile",popupBigPhotoSelector:".popup_type_photo",popupCardSelector:".popup_type_card",popupCloseSelector:".popup__close",popupConfirmSelector:".popup_type_confirm",popupUpdateAvatar:".popup_type_upd-avatar",profileSelector:".traveler",profileButtonCorrectSelector:".traveler__button-correct",profileButtonUpdAvatarSelector:".traveler__change-avatar",inputProfileName:".form__input_type_name",inputProfileAbout:".form__input_type_about",buttonAddCardSelector:".traveler__button-add",listCardsSelector:".cards__list",profaleNameSelector:".traveler__name",profaleAboutSelector:".traveler__about",profaleAvatarSelector:".traveler__avatar",popupPictureSelector:".popup__photo",popupPictureTextSelector:".popup__photo-description"};function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function i(){return i="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=a(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},i.apply(this,arguments)}function a(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function u(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var l=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(f,e);var t,n,a,l,p=(a=f,l=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(a);if(l){var r=s(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return u(this,e)});function f(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),(t=p.call(this,e))._popupPicture=t._popup.querySelector(r.popupPictureSelector),t._popupText=t._popup.querySelector(r.popupPictureTextSelector),t}return t=f,(n=[{key:"open",value:function(e){var t=e.name,r=e.link;i(s(f.prototype),"open",this).call(this),this._popupPicture.src=r,this._popupPicture.alt=t,this._popupText.textContent=t}}])&&o(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),f}(t);function p(e){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},p(e)}function f(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function h(){return h="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=d(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},h.apply(this,arguments)}function d(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}function _(e,t){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===p(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var m=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(c,e);var t,n,o,i,a=(o=c,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(o);if(i){var r=v(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return y(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=a.call(this,t))._handleSubmitClick=e,n._inputs={},n._inputList=Array.from(n._popup.querySelectorAll(r.inputSelector)),n._form=n._popup.querySelector(r.formSelector),n._buttonSubmitCreate="Создать",n}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;h(v(c.prototype),"setEventListeners",this).call(this),this._popup.addEventListener("submit",(function(t){e._handleSubmitClick(t,e._getInputValues(),e._buttonSubmitCreate)}))}},{key:"_getInputValues",value:function(){var e=this;return this._inputList.forEach((function(t){e._inputs[t.name]=t.value})),this._inputs}},{key:"close",value:function(){h(v(c.prototype),"close",this).call(this),this._form.reset()}}])&&f(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function S(){return S="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=E(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},S.apply(this,arguments)}function E(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}function g(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(c,e);var t,n,o,i,a=(o=c,i=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(o);if(i){var r=w(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return g(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=a.call(this,t))._popupForm=n._popup.querySelector(r.formSelector),n._handleSubmitDeleteCard=e,n}return t=c,(n=[{key:"setEventListeners",value:function(){var e=this;S(w(c.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){e._handleSubmitDeleteCard(t,e._card)}))}},{key:"open",value:function(e){S(w(c.prototype),"open",this).call(this),this._card=e}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function L(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var P=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(r)}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"renderItems",value:function(e){var t=this;e.cards.forEach((function(e){t._renderer(e)}))}}])&&L(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var I=function(){function e(t,r,n,o,i,a){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._likes=t.likes,this._idOwner=t.owner._id,this._idCard=t._id,this._name=t.name,this._link=t.link,this._myId=a,this._handleCardClick=n,this._handleToggleLike=o,this._handleOpenPopupWithConfirm=i,this._templateCardSelector=r,this._cardElement=this._getTemplate(),this._photo=this._cardElement.querySelector(".card__photo"),this._heart=this._cardElement.querySelector(".card__heart"),this._count_likes=this._cardElement.querySelector(".card__count-likes"),this._description=this._cardElement.querySelector(".card__description"),this._remove_button=this._cardElement.querySelector(".card__remove-button")}var t,r;return t=e,(r=[{key:"_countLikes",value:function(){return Object.keys(this._likes).length}},{key:"_isMyLike",value:function(){var e=this;return 0!==this._likes.length&&this._likes.some((function(t){return t._id===e._myId}))}},{key:"_setLike",value:function(){this._isMyLike(this._likes)?this._heart.classList.add("card__heart_active"):this._heart.classList.remove("card__heart_active"),this._count_likes.textContent=this._countLikes(this._likes)}},{key:"setLikes",value:function(e){this._likes=e}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateCardSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_toggleLike",value:function(){return this._isMyLike(this._likes)?this._methodCardLike="DELETE":this._methodCardLike="PUT",this._handleToggleLike({idCard:this._idCard,methodCardLike:this._methodCardLike,card:this})}},{key:"deleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._photo.addEventListener("click",(function(){e._handleCardClick({name:e._name,link:e._link})})),this._heart.addEventListener("click",(function(){return e._toggleLike()})),this._remove_button.addEventListener("click",(function(){return e._handleOpenPopupWithConfirm(e)}))}},{key:"createCard",value:function(){return this._description.textContent=this._name,this._photo.src=this._link,this._photo.alt=this._name,this._count_likes.textContent=this._countLikes(this._likes),this._setLike(this._likes),this._idOwner===this._myId&&this._remove_button.classList.add("card__remove-button_visible"),this._setEventListeners(),this._cardElement}}])&&j(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function q(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var A=function(){function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._params=t,this._formElement=r,this._errorList=r.querySelectorAll(t.spanErrorSelector),this._inputList=Array.from(this._formElement.querySelectorAll(this._params.inputSelector)),this._buttonElement=this._formElement.querySelector(this._params.submitButtonSelector)}var t,r;return t=e,(r=[{key:"_addClassError",value:function(e){e.classList.remove(this._params.inputErrorClass)}},{key:"_removeClassError",value:function(e){e.classList.remove(this._params.inputErrorClass)}},{key:"_addValidationErrors",value:function(e,t){e.classList.add(this._params.errorClass),e.textContent=t}},{key:"_removeValidationErrors",value:function(e){e.textContent="",e.classList.remove(this._params.errorClass)}},{key:"_showInputError",value:function(e,t){var r=this._formElement.querySelector("#".concat(e.id,"-error"));this._addClassError(e),this._addValidationErrors(r,t)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector("#".concat(e.id,"-error"));this._removeClassError(e),this._removeValidationErrors(t)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._buttonElement.disabled=this._hasInvalidInput(),this._hasInvalidInput()?this._buttonElement.classList.add(this._params.inactiveButtonClass):this._buttonElement.classList.remove(this._params.inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}},{key:"clearErrors",value:function(){var e=this;this._inputList.forEach((function(t){e._removeClassError(t)})),this._toggleButtonState(),this._errorList.forEach((function(t){return e._removeValidationErrors(t)}))}}])&&q(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var R=function(){function e(t,r,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._profileName=document.querySelector(t),this._profileAbout=document.querySelector(r),this._profileAvatar=document.querySelector(n),this._myId=""}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{profileName:this._profileName.textContent,profileAbout:this._profileAbout.textContent,myId:this._myId}}},{key:"setUserInfo",value:function(e){var t=e.name,r=e.about,n=e.myId,o=void 0===n?"":n;t&&(this._profileName.textContent=t),r&&(this._profileAbout.textContent=r),this._myId||(this._myId=o)}},{key:"renderAvatar",value:function(e){e&&(this._profileAvatar.src=e)}},{key:"renderUserInfo",value:function(e){this.setUserInfo({name:e.name,about:e.about,myId:e.myId}),this.renderAvatar(e.avatar)}}])&&T(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function U(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}const x=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._connect=t}var t,r;return t=e,(r=[{key:"_onError",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){return fetch("".concat(this._connect.baseUrl,"/cards"),{method:"GET",headers:this._connect.headers}).then(this._onError)}},{key:"getUser",value:function(){return fetch("".concat(this._connect.baseUrl,"/users/me"),{method:"GET",headers:this._connect.headers}).then(this._onError)}},{key:"getInitialData",value:function(){return Promise.all([this.getUser(),this.getInitialCards()])}},{key:"setUserInfo",value:function(e){return fetch("".concat(this._connect.baseUrl,"/users/me"),{method:"PATCH",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError)}},{key:"setCard",value:function(e){return fetch("".concat(this._connect.baseUrl,"/cards"),{method:"POST",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError)}},{key:"toggleLikeCard",value:function(e){var t=e.idCard,r=e.methodCardLike;return fetch("".concat(this._connect.baseUrl,"/cards/").concat(t,"/likes"),{method:r,headers:this._connect.headers}).then(this._onError)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._connect.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._connect.headers}).then(this._onError)}},{key:"setAvatar",value:function(e){return fetch("".concat(this._connect.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._connect.headers,body:JSON.stringify(e)}).then(this._onError)}}])&&U(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function B(e,t,n){e.querySelector(r.submitButtonSelector).textContent=t?"Сохранение...":n}function D(e){console.log(e)}var N=new R(r.profaleNameSelector,r.profaleAboutSelector,r.profaleAvatarSelector),V=document.querySelector(r.listCardsSelector),M=new P({renderer:function(e){M.addItem(K(e))}},r.listCardsSelector),J=new x({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-55",headers:{authorization:"79dea315-f51a-42c0-8f7a-17f645a07cb4","Content-Type":"application/json"}});J.getInitialData().then((function(e){N.renderUserInfo({name:e[0].name,about:e[0].about,myId:e[0]._id,avatar:e[0].avatar}),M.renderItems({cards:e[1]})})).catch((function(e){return D(e)}));var F=new m((function(e,t,r){e.preventDefault(),B(ie,!0,r),J.setAvatar(t).then((function(e){var t=e.avatar;N.renderAvatar(t)})).then((function(){F.close(),B(ie,!1,r)})).catch((function(e){return D(e)}))}),r.popupUpdateAvatar);F.setEventListeners();var G=new l(r.popupBigPhotoSelector);function H(e){W.open(e)}G.setEventListeners();var W=new O((function(e,t){e.preventDefault(),J.deleteCard(t._idCard).then((function(e){(e.message="Пост удалён")&&t.deleteCard()})).then((function(){W.close()})).catch((function(e){D(e)}))}),r.popupConfirmSelector);function z(e){G.open(e)}function K(e){return new I(e,r.templateCardSelector,z,Y,H,N.getUserInfo().myId).createCard()}W.setEventListeners();var Q=new m((function(e,t,r){e.preventDefault(),B(ne,!0,r),J.setCard(t).then((function(e){var t;t=K(e),V.prepend(t)})).then((function(){Q.close(),B(ne,!1,r)})).catch((function(e){return D(e)}))}),r.popupCardSelector);Q.setEventListeners(),document.querySelector(r.buttonAddCardSelector).addEventListener("click",(function(){ue.clearErrors(),Q.open()}));var X=new m((function(e,t,r){e.preventDefault(),B(Z,!0,r),J.setUserInfo(t).then((function(e){N.setUserInfo(e)})).then((function(){X.close(),B(Z,!1,r)})).catch((function(e){return D(e)}))}),r.popupProfileSelector);function Y(e){J.toggleLikeCard(e).then((function(t){e.card.setLikes(t.likes),e.card._setLike()})).catch((function(e){D(e)}))}X.setEventListeners();var Z=document.querySelector(r.popupProfileSelector),$=Z.querySelector(r.formSelector),ee=$.querySelector(r.inputProfileName),te=$.querySelector(r.inputProfileAbout),re=document.querySelector(r.profileSelector);re.querySelector(r.profileButtonCorrectSelector).addEventListener("click",(function(){var e=N.getUserInfo();ee.value=e.profileName,te.value=e.profileAbout,ce.clearErrors(),X.open()})),re.querySelector(r.profileButtonUpdAvatarSelector).addEventListener("click",(function(){se.clearErrors(),F.open()}));var ne=document.querySelector(r.popupCardSelector),oe=ne.querySelector(r.formSelector),ie=document.querySelector(r.popupUpdateAvatar),ae=ie.querySelector(r.formSelector),ce=new A(r,$),ue=new A(r,oe),se=new A(r,ae);ce.enableValidation(),ue.enableValidation(),se.enableValidation()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,